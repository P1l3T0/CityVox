name: Deploy ASP.NET WEB API to Azure and run test on Qodana
on:
  push:
    branches:
    - SofiaCallWebCrawler
env:
  AZURE_WEBAPP_NAME: CityVox
  AZURE_WEBAPP_PACKAGE_PATH: ./publish
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 6.0.x
  DATA_PROJECT_PATH: CityVoxWeb/CityVoxWeb.Data/CityVoxWeb.Data.csproj
  DATA_DIRECTORY: CityVoxWeb/CityVoxWeb.Data
  WORKING_DIRECTORY: CityVoxWeb/CityVoxWeb.API
jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Test
      run: dotnet test "${{ env.WORKING_DIRECTORY }}" --no-build
    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"
    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

        
  deploy:
    runs-on: windows-latest
    needs: build
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: List directory structure
      run: tree    
    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.CityVox_AB57 }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
         # New step to install dotnet-ef tool
    - name: Build the Project
      run: dotnet build ${{ env.DATA_PROJECT_PATH }} --configuration Release
    - name: Apply EF Core Migrations
      run: dotnet-ef database update --project ${{ env.DATA_PROJECT_PATH }}
      env:
        ConnectionStrings__DefaultConnection: ${{ secrets.AZURE_SQL_CONNECTION_STRING }}
        

  qodana:
      runs-on: ubuntu-latest
      permissions:
        contents: write
        pull-requests: write
        checks: write
      steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # to check out the actual pull request commit, not the merge commit
          fetch-depth: 0  # a full history is required for pull request analysis
      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@v2023.2
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_PROJECT_TOKEN }}
